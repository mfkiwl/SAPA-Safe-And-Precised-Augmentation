#ifndef GNSSRGEN_H_
#define GNSSRGEN_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "gpp_sapa.h"


typedef struct SSR_GEN_SV_ORBIT_CORRECTION_SET {
	GPPUINT4  iode;
	GPPDOUBLE d_orbit[GPP_SAPA_OCB_CORECTION_MAX];
}SSR_GEN_SV_ORBIT_CORRECTION_SET, *pSSR_GEN_SV_ORBIT_CORRECTION_SET;

typedef struct SSR_GEN_SV_CLOCK_CORRECTION_SET {
	GPPDOUBLE d_clock[GPP_SAPA_OCB_CORECTION_MAX];						///< clock correction da0,da1,da2
}SSR_GEN_SV_CLOCK_CORRECTION_SET, *pSSR_GEN_SV_CLOCK_CORRECTION_SET;

typedef struct SSR_GEN_SV_PB_CORRECTION_SET {
	GPPDOUBLE phase_correction;
}SSR_GEN_SV_PB_CORRECTION_SET, *pSSR_GEN_SV_PB_CORRECTION_SET;

typedef struct SSP_GEN_SV_CB_CORRECTION_SET {
	GPPDOUBLE code_correction;
}SSP_GEN_SV_CB_CORRECTION_SET, *pSSP_GEN_SV_CB_CORRECTION_SET;

typedef struct SSR_GEN_USE_STATES {
	pSSR_GEN_SV_ORBIT_CORRECTION_SET **orbits;
	pSSR_GEN_SV_CLOCK_CORRECTION_SET **clocks;
	pSSR_GEN_SV_PB_CORRECTION_SET **pbs;
	pSSP_GEN_SV_CB_CORRECTION_SET **cbs;
	GPPUINT8 clock_prn_bits[SAPA_MAX_SYS];
	GPPUINT8 orbit_prn_bits[SAPA_MAX_SYS];
	GPPUINT8 phasebias_prn_bits[SAPA_MAX_SYS];
	GPPUINT8 codebias_prn_bits[SAPA_MAX_SYS];
	GPPT_WNT wn_t;
}SSR_GEN_USE_STATES, *pSSR_GEN_USE_STATES;
#endif